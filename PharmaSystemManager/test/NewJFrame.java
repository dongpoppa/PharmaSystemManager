
import com.sun.glass.events.KeyEvent;
import java.util.Objects;
import javafx.beans.value.ChangeListener;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.JTextComponent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rondw
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        jlist.setVisible(false);
        jtablesc.setVisible(false);
        setSize(1000, 700);
        setLocationRelativeTo(null);
        aasd();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtablesc = new javax.swing.JScrollPane();
        jlist = new javax.swing.JList<>();
        txt = new javax.swing.JTextField();
        jtablesc123 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jlist.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistMouseClicked(evt);
            }
        });
        jtablesc.setViewportView(jlist);

        getContentPane().add(jtablesc);
        jtablesc.setBounds(70, 150, 240, 220);

        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKeyPressed(evt);
            }
        });
        getContentPane().add(txt);
        txt.setBounds(70, 110, 240, 40);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtablesc123.setViewportView(jTable2);

        getContentPane().add(jtablesc123);
        jtablesc123.setBounds(70, 170, 630, 380);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlistMouseClicked
        // TODO add your handling code here:
        txt.setText(jlist.getSelectedValue());
        jlist.setVisible(false);
        jtablesc.setVisible(false);

    }//GEN-LAST:event_jlistMouseClicked

    private void txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_BACKSPACE) {
            jlist.setVisible(false);
            jtablesc.setVisible(false);
        }
        if (evt.getKeyCode() == KeyEvent.VK_X) {
            jlist.setVisible(false);
            jtablesc.setVisible(false);
        }
    }//GEN-LAST:event_txtKeyPressed
    protected void updateFieldState() {
        if (txt.getText() != null || txt.getText().trim().length() > 0) {
            jlist.setVisible(true);
            jtablesc.setVisible(true);
        } else {
            jlist.setVisible(false);
            jtablesc.setVisible(false);
        }
    }

    void aasd() {
        DocumentListener d1 = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateFieldState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateFieldState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateFieldState();
            }

        };
        txt.getDocument().addDocumentListener(d1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable jTable2;
    private javax.swing.JList<String> jlist;
    private javax.swing.JScrollPane jtablesc;
    private javax.swing.JScrollPane jtablesc123;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
