/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DAO.DrugInfomationSalesDAO;
import DAO.SaleInvoiceDAO;
import helper.DialogHelper;
import helper.JdbcHelper;
import helper.ShareHelper;
import java.awt.Component;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import model.DrugInfomation;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author rondw
 */
public class SaleInvoiceJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form PurchaseInvoiceJInternalFrame
     */
    public SaleInvoiceJInternalFrame() {
        initComponents();
        init();
    }

    DrugInfomationSalesDAO dao = new DrugInfomationSalesDAO();
    SaleInvoiceDAO saleInvoiceDAO = new SaleInvoiceDAO();
    DefaultTableModel modelInvoice;
    DefaultListModel modelList;
    DrugInfomation selectedDrug;
    String INVOICE_ID;

    public SaleInvoiceJInternalFrame(JFrame frame) {
        initComponents();
        init();
        ShareHelper.frame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInvoice = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        chkAll = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JFormattedTextField();
        txtDC = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listDrug = new javax.swing.JList<>();
        panelDrug = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        lblMax = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtMan = new javax.swing.JTextField();
        txtPrice = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtInfo = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        lblUnit = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtQuantity = new com.toedter.components.JSpinField();
        jPanel2 = new javax.swing.JPanel();
        btnFind = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCheckOut = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        lblUnit1 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Sales Invoice");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Invoice Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP));

        tblInvoice.setAutoCreateRowSorter(true);
        tblInvoice.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tblInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Drug ID", "Drug name", "Quantity", "Price", "Amount", "Select", "No", "Max"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        tblInvoice.setRowHeight(25);
        tblInvoice.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tblInvoiceMouseClicked(evt);
            }
        });
        tblInvoice.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                tblInvoiceKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblInvoice);
        if (tblInvoice.getColumnModel().getColumnCount() > 0)
        {
            tblInvoice.getColumnModel().getColumn(0).setResizable(false);
            tblInvoice.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblInvoice.getColumnModel().getColumn(2).setResizable(false);
            tblInvoice.getColumnModel().getColumn(3).setResizable(false);
            tblInvoice.getColumnModel().getColumn(4).setResizable(false);
            tblInvoice.getColumnModel().getColumn(5).setMinWidth(60);
            tblInvoice.getColumnModel().getColumn(5).setPreferredWidth(60);
            tblInvoice.getColumnModel().getColumn(5).setMaxWidth(60);
            tblInvoice.getColumnModel().getColumn(6).setMinWidth(0);
            tblInvoice.getColumnModel().getColumn(6).setPreferredWidth(0);
            tblInvoice.getColumnModel().getColumn(6).setMaxWidth(0);
            tblInvoice.getColumnModel().getColumn(7).setMinWidth(0);
            tblInvoice.getColumnModel().getColumn(7).setPreferredWidth(0);
            tblInvoice.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        jPanel7.setLayout(new java.awt.GridLayout(1, 5, 10, 10));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel15.setText("TOTAL AMOUNT");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Discount");

        chkAll.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                chkAllItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Select all");

        jLabel2.setText("%");

        txtTotal.setEditable(false);
        txtTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("VNƒê #,##0"))));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);

        txtDC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        txtDC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDC.setText("0");
        txtDC.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        txtDC.setMaximumSize(new java.awt.Dimension(4, 20));
        txtDC.setName(""); // NOI18N
        txtDC.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                txtDCFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(586, 586, 586))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkAll, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkAll, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        listDrug.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Result", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));
        listDrug.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listDrug.setVisibleRowCount(100);
        listDrug.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listDrugMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listDrug);

        panelDrug.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Medicine infomation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP));

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setText("Price");

        lblMax.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblMax.setForeground(new java.awt.Color(0, 153, 0));
        lblMax.setText("100");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Drug name");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Drug Info");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Quantity");

        txtName.setEditable(false);
        txtName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtMan.setEditable(false);
        txtMan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtPrice.setEditable(false);
        txtPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        txtPrice.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        txtPrice.setMaximumSize(new java.awt.Dimension(4, 20));
        txtPrice.setName(""); // NOI18N

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Drug ID");

        txtInfo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtID.setEditable(false);
        txtID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setText("Available:");

        btnAddToCart.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAddToCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add_cart.png"))); // NOI18N
        btnAddToCart.setText("Add to cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddToCartActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel17.setText("Unit:");

        lblUnit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblUnit.setForeground(new java.awt.Color(0, 153, 0));
        lblUnit.setText("vi√™n");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Manufacturer");

        txtQuantity.setNextFocusableComponent(btnAddToCart);

        javax.swing.GroupLayout panelDrugLayout = new javax.swing.GroupLayout(panelDrug);
        panelDrug.setLayout(panelDrugLayout);
        panelDrugLayout.setHorizontalGroup(
            panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDrugLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddToCart)
                    .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDrugLayout.createSequentialGroup()
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblUnit))
                        .addGroup(panelDrugLayout.createSequentialGroup()
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMax))
                        .addComponent(txtName)
                        .addComponent(txtID)
                        .addGroup(panelDrugLayout.createSequentialGroup()
                            .addComponent(txtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtMan, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        panelDrugLayout.setVerticalGroup(
            panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDrugLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMan, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel12))
                .addGap(17, 17, 17)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(jLabel16)
                    .addComponent(lblMax)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(panelDrugLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(lblUnit))
                .addGap(33, 33, 33)
                .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel2.setLayout(new java.awt.GridLayout(1, 4, 20, 1));

        btnFind.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus.png"))); // NOI18N
        btnFind.setText("Find history");
        btnFind.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnFindActionPerformed(evt);
            }
        });
        jPanel2.add(btnFind);

        btnNew.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refesh.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNewActionPerformed(evt);
            }
        });
        jPanel2.add(btnNew);

        btnClear.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/cancle.png"))); // NOI18N
        btnClear.setText("Delete");
        btnClear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnClearActionPerformed(evt);
            }
        });
        jPanel2.add(btnClear);

        btnCheckOut.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnCheckOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save_invoice.png"))); // NOI18N
        btnCheckOut.setText("Check out");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCheckOutActionPerformed(evt);
            }
        });
        jPanel2.add(btnCheckOut);

        btnPrint.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/print.png"))); // NOI18N
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrint);

        lblUnit1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblUnit1.setForeground(new java.awt.Color(0, 153, 0));
        lblUnit1.setText("vi√™n");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(panelDrug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblUnit1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDrug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lblUnit1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFindActionPerformed
    {//GEN-HEADEREND:event_btnFindActionPerformed
        find();
        

    }//GEN-LAST:event_btnFindActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnClearActionPerformed
    {//GEN-HEADEREND:event_btnClearActionPerformed
        if (btnCheckOut.isEnabled()) {
            clear();
        } else {
            deleteInvoice();
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void chkAllItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_chkAllItemStateChanged
    {//GEN-HEADEREND:event_chkAllItemStateChanged
        if (chkAll.isSelected()) {
            for (int i = 0; i < modelInvoice.getRowCount(); i++) {
                modelInvoice.setValueAt(true, i, 5);
            }
        } else {
            for (int i = 0; i < modelInvoice.getRowCount(); i++) {
                modelInvoice.setValueAt(false, i, 5);
            }
        }
    }//GEN-LAST:event_chkAllItemStateChanged

    private void listDrugMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_listDrugMouseClicked
    {//GEN-HEADEREND:event_listDrugMouseClicked
        chooseFromList();
    }//GEN-LAST:event_listDrugMouseClicked

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCheckOutActionPerformed
    {//GEN-HEADEREND:event_btnCheckOutActionPerformed
        if (modelInvoice.getRowCount() > 0) {
            checkout();
            btnPrint.setEnabled(true);
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
        load();
    }//GEN-LAST:event_formInternalFrameOpened

    private void tblInvoiceKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_tblInvoiceKeyTyped
    {//GEN-HEADEREND:event_tblInvoiceKeyTyped
        getPrice();
    }//GEN-LAST:event_tblInvoiceKeyTyped

    private void txtDCFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtDCFocusLost
    {//GEN-HEADEREND:event_txtDCFocusLost
        getPrice();
    }//GEN-LAST:event_txtDCFocusLost

    private void tblInvoiceMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tblInvoiceMouseClicked
    {//GEN-HEADEREND:event_tblInvoiceMouseClicked
        getModel();
    }//GEN-LAST:event_tblInvoiceMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        if (INVOICE_ID != null) {
            billPrint();
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddToCartActionPerformed
    {//GEN-HEADEREND:event_btnAddToCartActionPerformed
        addToCart();
        btnAddToCart.setText("Add to cart");
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSearchActionPerformed
    {//GEN-HEADEREND:event_btnSearchActionPerformed
        fillToList();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNewActionPerformed
    {//GEN-HEADEREND:event_btnNewActionPerformed
        newInvoice();
        
    }//GEN-LAST:event_btnNewActionPerformed

    void init() {
        setFrameIcon(ShareHelper.APP_ICON);
        btnPrint.setEnabled(false);
    }

    void newInvoice() {
        setStatus(true);
        btnPrint.setEnabled(false);
        INVOICE_ID = null;
        clearTextField();
        modelInvoice.setRowCount(0);
        txtDC.setText("0");
        txtTotal.setText("0");
        chkAll.setSelected(false);
    }

    void load() {
        txtQuantity.setMinimum(1);
        modelInvoice = (DefaultTableModel) tblInvoice.getModel();
        modelInvoice.setRowCount(0);
    }

    void fillToList() {
        listDrug.setModel(new DefaultListModel());
        modelList = (DefaultListModel) listDrug.getModel();
        modelList.removeAllElements();
        try {
            List<DrugInfomation> list = dao.findByID(txtInfo.getText());
            for (DrugInfomation drug : list) {
                modelList.addElement(drug);
            }

        } catch (Exception e) {
            e.printStackTrace();
            DialogHelper.alert(this, "Database access error!");
        }
    }

    void chooseFromList() {
        try {
            selectedDrug = (DrugInfomation) modelList.getElementAt(listDrug.getSelectedIndex());
        } catch (Exception e) {
            e.printStackTrace();
        }

        int max = dao.findMax(selectedDrug.getDrugNumber());
        txtID.setText(selectedDrug.getDrugID());
        txtMan.setText(selectedDrug.getManufactured());
        txtName.setText(selectedDrug.getDrugName());
        txtPrice.setText(String.valueOf(selectedDrug.getSalePrice()));
        txtQuantity.setValue(1);
        lblMax.setText(String.valueOf(max));
        txtQuantity.setMaximum(max);
        lblUnit.setText(selectedDrug.getUnit());
        txtQuantity.requestFocus();
    }

    int selectedRow() {
        return tblInvoice.getSelectedRow();
    }

    void addToCart() {
        if (txtQuantity.getValue() <= 0) {
            return;
        }
        if (btnAddToCart.getText().equals("Update to invoice")) {
            modelInvoice.removeRow(selectedRow());
        } else {
            for (int i = 0; i < tblInvoice.getRowCount(); i++) {
                if (selectedDrug.getDrugNumber() == (Integer) modelInvoice.getValueAt(i, 6)) {
                    int par = txtQuantity.getValue() + (Integer) modelInvoice.getValueAt(i, 2);
                    if (par > (Integer) modelInvoice.getValueAt(i, 7)) {
                        DialogHelper.alert(this, "S·ªë l∆∞·ª£ng th√™m v√†o qu√° gi·ªõi h·∫°n!");
                    } else {
                        modelInvoice.setValueAt(par, i, 2);
                        DialogHelper.alert(this, "ƒê√£ b·ªï sung s·ªë l∆∞·ª£ng!");
                    }
                    return;
                }
            }
        }
        try {
            Vector vec = new Vector();
            vec.add(selectedDrug.getDrugID());
            vec.add(selectedDrug.getDrugName());
            vec.add(txtQuantity.getValue());
            vec.add(selectedDrug.getSalePrice());
            vec.add((txtQuantity.getValue() * selectedDrug.getSalePrice()));
            vec.add(false);
            vec.add(selectedDrug.getDrugNumber());
            vec.add(selectedDrug.getQuantity());
            modelInvoice.addRow(vec);
        } catch (Exception e) {
            e.printStackTrace();
        }

        getPrice();

        clearTextField();
        listDrug.setEnabled(true);
    }

    void getModel() {
        int max = dao.findMax(selectedDrug.getDrugNumber());
        selectedDrug = dao.findById(modelInvoice.getValueAt(selectedRow(), 0).toString());
        txtID.setText(selectedDrug.getDrugID());
        txtName.setText(selectedDrug.getDrugName());
        txtMan.setText(selectedDrug.getManufactured());
        txtPrice.setText(modelInvoice.getValueAt(selectedRow(), 3).toString());
        txtQuantity.setValue((Integer) modelInvoice.getValueAt(selectedRow(), 2));
        lblUnit.setText(selectedDrug.getUnit());
        lblMax.setText(String.valueOf(max));
        txtQuantity.setMaximum(max);
        btnAddToCart.setText("Update to invoice");
        listDrug.setEnabled(false);
    }

    void clearTextField() {
        txtID.setText("");
        txtName.setText("");
        txtMan.setText("");
        txtPrice.setText("");
        txtQuantity.setValue(0);
    }

    void clear() {
        for (int i = tblInvoice.getRowCount() - 1; i > -1; i--) {
            if ((Boolean) modelInvoice.getValueAt(i, 5)) {
                modelInvoice.removeRow(i);
            }
        }
        getPrice();
    }

    double getPrice() {
        double total = 0;
        double discount;

        try {
            discount = txtDC.getText().trim().equals("") ? 0 : Double.valueOf(txtDC.getText());
        } catch (NumberFormatException e) {
            discount = 0;
            txtDC.setText("0");
            throw new RuntimeException();
        }
        for (int i = 0; i < modelInvoice.getRowCount(); i++) {
            total += (double) modelInvoice.getValueAt(i, 4);
        }
        double price = total * (100 - discount) / 100;
        txtTotal.setText(String.valueOf(price));

        return price;
    }

    private static String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    private static String dburl = "jdbc:sqlserver://localhost:1433;databaseName=PharmaSystemManager";
    private static String username = "sa";
    private static String password = "songlong";

    void checkout() {
        
        if (tblInvoice.getRowCount() == 0 || btnAddToCart.getText().equals("Update to invoice")) {
            return;
        }
        new CheckOut(ShareHelper.frame, true, getPrice(), true).setVisible(true);
        if (ShareHelper.paymentConfimation) {
            try {
                insert();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    void insert() throws SQLException {
        int sothuoc = tblInvoice.getRowCount();
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(dburl, username, password);
            connection.setAutoCommit(false);
            CallableStatement call = null;
            PreparedStatement pstm = null;

            //INSERT HOADONBANHANG
            String sql1 = "{CALL sp_INSERT_HOADONBANHANG (?,?,?,?,?,?)}";
            call = connection.prepareCall(sql1);
            call.setObject(1, new Date());
            call.setObject(2, ShareHelper.cash);
            call.setObject(3, ShareHelper.debit);
            call.setObject(4, 10);
            call.setObject(5, ShareHelper.USER.getEmployeeID());
            call.registerOutParameter(6, java.sql.Types.NVARCHAR);

            call.execute();
            INVOICE_ID = call.getString(6);

            //INSERT HOADONBANHANGCHITIET
            String sql2 = "INSERT INTO HOADONBANHANGCHITIET VALUES (?,?,?)";
            for (int i = 0; i < sothuoc; i++) {
                pstm = connection.prepareStatement(sql2);
                pstm.setObject(1, INVOICE_ID);
                pstm.setObject(2, (Integer) modelInvoice.getValueAt(i, 6));
                pstm.setObject(3, (Integer) modelInvoice.getValueAt(i, 2));
                pstm.execute();
            }

            connection.commit();
            DialogHelper.alert(this, "Success");
        } catch (Exception e) {
            e.printStackTrace();
            connection.rollback();
            DialogHelper.alert(this, "Failed! Check drugs quantity");
        }
        connection.close();
    }

    void billPrint() {
        try {
            String sql = "SELECT Thuoc.MaThuoc AS 'DrugID',TenThuoc AS 'Drug name',GiaBan AS 'Price',HoaDonBanHangChiTiet.SoLuong AS 'Quantity',GiaBan*HoaDonBanHangChiTiet.SoLuong AS 'Amount' FROM dbo.HoaDonBanHangChiTiet \n"
                    + "	JOIN dbo.HoaDonBanHang ON HoaDonBanHang.MaHDBan = HoaDonBanHangChiTiet.MaHDBan \n"
                    + "	JOIN dbo.ThuocTrongKho ON HoaDonBanHangChiTiet.IDThuoc = ThuocTrongKho.IDThuoc\n"
                    + "	JOIN dbo.Thuoc ON Thuoc.MaThuoc = ThuocTrongKho.MaThuoc\n"
                    + "	WHERE HoaDonBanHang.MaHDBan = '" + INVOICE_ID + "'";
            ResultSet rs = JdbcHelper.executeQuery(sql);

            JasperDesign jasdi = JRXmlLoader.load("src/Print/SaleBill.jrxml");
            HashMap<String, Object> para = new HashMap<>();

            para.put("Address", ShareHelper.Branch.getAddress());
            para.put("InvoiceID", INVOICE_ID);
            para.put("EmployeeID", ShareHelper.USER.getEmployeeID());
            para.put("SaleDate", saleInvoiceDAO.DatePurchaseByID(INVOICE_ID));
            para.put("TotalAmount", txtTotal.getText());
            para.put("Discount", txtDC.getText());

            JasperReport js = JasperCompileManager.compileReport(jasdi);
            JasperPrint jp = JasperFillManager.fillReport(js, para, new JRResultSetDataSource(rs));
            JasperViewer.viewReport(jp, false);
            newInvoice();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void setStatus(boolean status) {
        for (Component c : panelDrug.getComponents()) {
            c.setEnabled(status);
        }
        txtDC.setEditable(status);
        chkAll.setEnabled(status);
        listDrug.setEnabled(status);
        btnCheckOut.setEnabled(status);
    }

    void deleteInvoice() {
        btnPrint.setEnabled(false);
        new ConfirmDeleteHelper(ShareHelper.frame, true).setVisible(true);
        if (ShareHelper.status != null) {
            try {
                JdbcHelper.executeUpdate("UPDATE HOADONBANHANG SET TRANGTHAIHDBAN='" + ShareHelper.getStatus() + "' WHERE MAHDBAN='" + INVOICE_ID + "'");
                DialogHelper.alert(this, "Update successfully!");
                ShareHelper.status = null;
            } catch (Exception e) {
                DialogHelper.alert(this, "Update failed!");
            }
        }
    }

    private void find() {
        setStatus(false);
        
        INVOICE_ID = DialogHelper.prompt(this, "Invoice ID:");
        System.out.println(INVOICE_ID);
        List<DrugInfomation> list = dao.findByInvoice(INVOICE_ID);
        if (!list.isEmpty()) {
            modelInvoice.setRowCount(0);
            for (DrugInfomation elm : list) {
                try {
                    Vector vec = new Vector();
                    vec.add(elm.getDrugID());
                    vec.add(elm.getDrugName());
                    vec.add(elm.getQuantity());
                    vec.add(elm.getSalePrice());
                    vec.add(elm.getQuantity() * elm.getSalePrice());
                    vec.add(false);
                    vec.add(elm.getDrugNumber());
                    vec.add(elm.getQuantity());
                    modelInvoice.addRow(vec);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            try {
                ResultSet rs = null;
                try {
                    rs = JdbcHelper.executeQuery("SELECT trangthaihdban, giamgia, SUM(TTTHE+TTTIENMAT) AS TONG FROM HOADONBANHANG WHERE MAHDBAN='" + INVOICE_ID + "' group by trangthaihdban, giamgia");
                    while (rs.next()) {
                        String stt = rs.getString("trangthaihdban");
                        if (stt != null) {
                            DialogHelper.alert(this, "Invoice was deleted by:\n" + stt);
                        }
                        txtTotal.setText(rs.getString("TONG"));
                        txtDC.setText(rs.getString("Giamgia"));
                    }
                    btnPrint.setEnabled(true);
                } finally {
                    rs.getStatement().getConnection().close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }

        } else {
            DialogHelper.alert(this, "Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n n√†y");
            this.newInvoice();
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox chkAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMax;
    private javax.swing.JLabel lblUnit;
    private javax.swing.JLabel lblUnit1;
    private javax.swing.JList<String> listDrug;
    private javax.swing.JPanel panelDrug;
    private javax.swing.JTable tblInvoice;
    private javax.swing.JFormattedTextField txtDC;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtInfo;
    private javax.swing.JTextField txtMan;
    private javax.swing.JTextField txtName;
    private javax.swing.JFormattedTextField txtPrice;
    private com.toedter.components.JSpinField txtQuantity;
    private javax.swing.JFormattedTextField txtTotal;
    // End of variables declaration//GEN-END:variables

}
